name: "Reusable: Create Repository Secrets"

on:
  workflow_call:
    inputs:
      repo_owner:
        required: true
        type: string
      repo_name:
        required: true
        type: string
    secrets:
      PAT_TOKEN:
        required: true

permissions:
  actions: write
  contents: read

jobs:
  create-secrets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v4

      - name: Clone Template Repository
        run: |
          git clone https://github.com/${{ inputs.repo_owner }}/template-automation-repo.git
          ls -la template-automation-repo/scripts  # âœ… Debugging step

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install PyGithub

      - name: Run Secret Creation Script
        run: python template-automation-repo/scripts/create_secrets.py
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # âœ… Use PAT for authentication
          GITHUB_OWNER: ${{ inputs.repo_owner }}
          GITHUB_REPOSITORY: ${{ inputs.repo_name }}

      - name: Debugging Output
        if: failure()
        run: |
          echo "ðŸš¨ Script failed! Listing files in repo:"
          ls -la
